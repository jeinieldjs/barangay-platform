<style>
  .comments-container.hidden {
    display: none;
  }
</style>

<div class="post-index-wrapper">
  <h1 class="page-ttile">Posts from Barangay <%= current_user.barangay %></h1>
  
  <div class="post-index-actions">
    <%= link_to "Create New Post", new_resident_post_path, class: "action-link" %>
    <%= link_to "View My Posts", my_posts_resident_posts_path, class: "action-link" %>
  </div>

  <div class="posts-index-container">
    <% @posts.reverse_each do |post| %>
      <div class="indiv-post">
        <p>
          <strong>
            <% if post.anonymous? %>
              <span>Anonymous:</span>
            <% else %>
              <span><%= post.user.first_name %>:</span>
            <% end %>
          </strong><br>
          <small class="posted-at-info">
          <% time_in_philippines = post.created_at.in_time_zone("Asia/Manila") %>
          <%= time_in_philippines.strftime("%d %b %Y, %H:%M:%S") %>
          </small>
        </p>
        <h3><%= post.title %></h3>
        <p><%= post.content %></p>

        <% like = current_user.likes.find_by(post_id: post.id) %>
        <% like_count = post.likes.count %>
        <div class="like-count">
          <small><i><%= like_count %></i></small> <!-- Display like count -->
        </div>

        <% if like.nil? %>
          <form class="like-form" action="<%= resident_post_likes_path(post) %>" method="post">
            <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
            <input type="hidden" name="like[post_id]" value="<%= post.id %>">
            <button type="submit">Like</button>
          </form>
        <% else %>
          <form class="unlike-form" action="<%= resident_post_like_path(post, like) %>" method="post">
            <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
            <input type="hidden" name="_method" value="delete">
            <button type="submit">Unlike</button>
          </form>
        <% end %>

        <!-- Button modal -->
        <button type="button" class="btn btn-primary comment-btn" data-post-id="<%= post.id %>" data-post-title="<%= post.title %>">
          Add Comment
        </button>


        <div id="commentForm-<%= post.id %>" style="display: none;">
          <form action="<%= resident_post_comments_path(post) %>" method="post">
            <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
            <textarea name="comment[content]" rows="5" cols="20"></textarea>
            <input type="submit" value="Submit">
          </form>
        </div>
        <!-- P TAG para idisplay ung comment -->
        <% if post.comments.present? %>
          <h6 class="comments-title">Comments:</h6> <!-- Moved "Comments:" text here -->
          <% comment_count = post.comments.count %>
          <% like_count = post.likes.count %>
          <button class="toggle-comments-btn" data-post-id="<%= post.id %>" data-comment-count="<%= comment_count %>" data-like-count="<%= like_count %>">See all <%= comment_count %> comments</button>
          <div class="comments-container hidden" id="commentsContainer-<%= post.id %>">
            <% post.comments.each do |comment| %>
              <article>
                <small>By: <%= comment.user.first_name %> <%= comment.user.last_name %></small>
                <p><%= comment.content %></p>
                <% if current_user == comment.user %>
                  <%= button_to "Delete", resident_post_comment_path(comment.post, comment), method: :delete, data: { confirm: "Are you sure you want to delete this comment?" }, class: "delete-comment-btn" %>
                <% end %>
              </article>
              <hr />
            <% end %>
          </div>
        <% end %>
      </div>
    <% end %>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    let toggleButtons = document.querySelectorAll('.toggle-comments-btn');

    toggleButtons.forEach(function(button) {
      button.addEventListener('click', function() {
        let postId = this.getAttribute('data-post-id');
        let commentsContainer = document.getElementById('commentsContainer-' + postId);
        let commentsTitle = document.querySelector('.comments-title');
        commentsContainer.classList.toggle('hidden');
        commentsTitle.classList.toggle('hidden'); // Toggle comments title visibility
        let commentCount = parseInt(this.getAttribute('data-comment-count'));
        let likeCount = parseInt(this.getAttribute('data-like-count'));
        if (commentsContainer.classList.contains('hidden')) {
          this.textContent = 'See all ' + commentCount + ' comments';
        } else {
          this.textContent = 'Hide comments';
        }
      });
    });

    let commentBtns = document.querySelectorAll(".comment-btn");
    commentBtns.forEach(function(btn) {
      btn.addEventListener("click", function() {
        let postId = this.getAttribute("data-post-id");
        let commentForm = document.getElementById("commentForm-" + postId);

        commentForm.style.display = (commentForm.style.display === "none") ? "block" : "none";
      });
    });
  });
</script>
